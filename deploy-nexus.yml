---
- name: Deploy Nexus Repository Manager
  hosts: localhost
  gather_facts: false
  vars:
    nexus_version: "3.82.0-08"
    nexus_user: nexus
    nexus_group: nexus
    nexus_home: "/opt/nexus"
    nexus_data: "/opt/nexus-data"
    
  tasks:
    - name: Check if Nexus is already running
      systemd:
        name: nexus
        state: started
      register: nexus_status
      ignore_errors: true
      
    - name: Install Java if not present
      apt:
        name: openjdk-11-jdk
        state: present
        update_cache: yes
      when: nexus_status is failed
      
    - name: Create nexus user
      user:
        name: "{{ nexus_user }}"
        system: yes
        shell: /bin/bash
        home: "{{ nexus_home }}"
        create_home: yes
      when: nexus_status is failed
      
    - name: Create Nexus directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ nexus_user }}"
        group: "{{ nexus_group }}"
        mode: '0755'
      loop:
        - "{{ nexus_home }}"
        - "{{ nexus_data }}"
      when: nexus_status is failed
      
    - name: Download Nexus
      get_url:
        url: "https://download.sonatype.com/nexus/3/nexus-{{ nexus_version }}-linux-x86_64.tar.gz"
        dest: "/tmp/nexus-{{ nexus_version }}-linux-x86_64.tar.gz"
        mode: '0644'
      when: nexus_status is failed
      
    - name: Extract Nexus
      unarchive:
        src: "/tmp/nexus-{{ nexus_version }}-linux-x86_64.tar.gz"
        dest: /opt
        remote_src: yes
        creates: "/opt/nexus-{{ nexus_version }}"
      when: nexus_status is failed
      
    - name: Create Nexus symlink
      file:
        src: "/opt/nexus-{{ nexus_version }}"
        dest: "{{ nexus_home }}"
        state: link
      when: nexus_status is failed
      
    - name: Set Nexus ownership
      file:
        path: "{{ nexus_home }}"
        owner: "{{ nexus_user }}"
        group: "{{ nexus_group }}"
        recurse: yes
      when: nexus_status is failed
      
    - name: Configure Nexus data directory
      lineinfile:
        path: "{{ nexus_home }}/bin/nexus.vmoptions"
        regexp: '^-Dkaraf.data='
        line: '-Dkaraf.data={{ nexus_data }}'
      when: nexus_status is failed
      
    - name: Create Nexus systemd service
      template:
        src: templates/nexus.service.j2
        dest: /etc/systemd/system/nexus.service
        mode: '0644'
      when: nexus_status is failed
      
    - name: Start and enable Nexus service
      systemd:
        name: nexus
        state: started
        enabled: yes
        daemon_reload: yes
      when: nexus_status is failed
      
    - name: Wait for Nexus to be ready
      uri:
        url: http://localhost:8081/service/rest/v1/status
        method: GET
        status_code: 200
      register: nexus_ready
      until: nexus_ready.status == 200
      retries: 30
      delay: 10
      when: nexus_status is failed
      
    - name: Get Nexus admin password
      slurp:
        src: "{{ nexus_data }}/admin.password"
      register: admin_password_file
      when: nexus_status is failed
      
    - name: Display Nexus access information
      debug:
        msg: |
          ðŸŽ‰ Nexus Repository Manager deployed successfully!
          
          Access Information:
          - Web UI: http://localhost:8081
          - Username: admin
          - Password: {{ admin_password_file.content | b64decode | trim if admin_password_file is defined else 'Check /opt/nexus-data/admin.password' }}
